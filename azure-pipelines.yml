# Build, test and package pipeline for SpecFlow.Variants package
# Versioning of package currently managed by variables

trigger:
- master
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  packageVersion: '1.0.0-develop'
  vmImage: 'windows-latest'

stages:
- stage: build_test
  pool:
    vmImage: '$(vmImage)'
  jobs:
  - job: build
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*UnitTests.dll
          !**\*TestAdapter.dll
          !**\obj\**
    - task: CopyFiles@2
      inputs:
        contents: |
          **\SpecFlow.Variants.SpecFlowPlugin\bin\$(buildConfiguration)\**
          **\*.nuspec
        targetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop    

### THE BELOW IS FOR RUNNING THE INTEGRATION TESTS AS A NEW JOB
    #- task: CopyFiles@2
    #  inputs:
    #    contents: |
    #      **\SpecFlow.Variants.*\bin\$(buildConfiguration)\**
    #      !**\SpecFlow.Variants.UnitTests\**
    #    targetFolder: $(Build.ArtifactStagingDirectory)
    #- task: PublishBuildArtifacts@1
    #  inputs:
    #    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #    artifactName: drop
  #- job: run_integration_tests
  #  dependsOn: build
  #  steps:
  #  - task: DownloadBuildArtifacts@0
  #    inputs:
  #      buildType: 'current'
  #      downloadType: 'single'
  #      artifactName: 'drop'
  #      downloadPath: '$(System.ArtifactsDirectory)'
  #  - task: VSTest@2
  #    inputs:
  #      testSelector: 'testAssemblies'
  #      testAssemblyVer2: |
  #        **\*IntegrationTests.dll
  #        !**\*TestAdapter.dll
  #        !**\obj\**
  #      searchFolder: '$(System.ArtifactsDirectory)'

- stage: deploy_package
  pool:
    vmImage: '$(vmImage)'
  jobs:
  - job: deploy_prerelease
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))  
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        command: 'pack'
        packagesToPack: '**/*.nuspec'
        versioningScheme: 'byEnvVar'
        versionEnvVar: '$(packageVersion)'
    - task: NuGetCommand@2
      inputs:
        command: 'push'
        #packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        packagesToPush: '$(System.ArtifactsDirectory)/*.nupkg;!$(Build.ArtifactStagingDirectory)/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '8cc48bdf-30e3-409a-9f50-1d2e6944e896/ee5c684a-40df-48ba-b303-1a8a5ca628e5'

### ADD PUSH TO NUGET
#    - job: deploy_major
#      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))