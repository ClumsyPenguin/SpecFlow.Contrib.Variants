# Build, test and package pipeline for SpecFlow.Contrib.Variants package
# Versioning of package currently managed by variables

trigger:
- release
- develop

variables:
  solution: '**\*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  packageVersion: '3.1.0-pre'
  packageVersionPre: '3.1.0-develop'
  vmImage: 'windows-latest'

stages:
- stage: build_test
  pool:
    vmImage: '$(vmImage)'
  jobs:
  - job: build
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**\*.csproj'
        feedsToUse: 'select'
        vstsFeed: '8cc48bdf-30e3-409a-9f50-1d2e6944e896/ee5c684a-40df-48ba-b303-1a8a5ca628e5'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**\SpecFlow.Contrib.Variants.csproj'
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*UnitTests.dll
          !**\*TestAdapter.dll
          !**\obj\**
  - job: pack_prerelease
    dependsOn: build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '**/SpecFlow.Contrib.Variants.csproj'
        versioningScheme: 'byEnvVar'
        packDirectory: '$(Build.ArtifactStagingDirectory)'
        versionEnvVar: 'packageVersionPre'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: prerelease
  - job: pack_test_release
    dependsOn: build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**\*Core.*.IntegrationTests.csproj'
        feedsToUse: 'select'
        vstsFeed: '8cc48bdf-30e3-409a-9f50-1d2e6944e896/ee5c684a-40df-48ba-b303-1a8a5ca628e5'
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*Core.*.IntegrationTests.dll
          !**\*TestAdapter.dll
          !**\obj\**
        distributionBatchType: 'basedOnAssembly'
        uiTests: true
    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '**/SpecFlow.Contrib.Variants.csproj'
        versioningScheme: 'byEnvVar'
        packDirectory: '$(Build.ArtifactStagingDirectory)'
        versionEnvVar: 'packageVersion'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: release

# UNCOMMENT AND SORT WHEN NEW INTEGRATION TESTS ARE ADDED
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/package/nuget?view=azure-devops
#- stage: integration_tests
#  pool:
#    vmImage: '$(vmImage)'
#  jobs:
#  - job: run_tests
#    steps:
#    - task: DownloadBuildArtifacts@0
#      inputs:
#        buildType: 'current'
#        downloadType: 'single'
#        artifactName: 'drop'
#        downloadPath: '$(System.ArtifactsDirectory)'
#    - task: VSTest@2
#      inputs:
#        testSelector: 'testAssemblies'
#        testAssemblyVer2: |
#          **\*IntegrationTests.dll
#          !**\*TestAdapter.dll
#          !**\obj\**
#        searchFolder: '$(System.ArtifactsDirectory)'
#        distributionBatchType: 'basedOnAssembly'
#        uiTests: true


- stage: deploy_package
  pool:
    vmImage: '$(vmImage)'
  jobs:
  - job: deploy_prerelease
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))  
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'prerelease'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(System.ArtifactsDirectory)\prerelease\*.nupkg;!$(System.ArtifactsDirectory)\prerelease\*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '8cc48bdf-30e3-409a-9f50-1d2e6944e896/ee5c684a-40df-48ba-b303-1a8a5ca628e5'
        allowPackageConflicts: true
  - job: deploy_release
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))  
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'release'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)\release\*.nupkg;!$(Build.ArtifactStagingDirectory)\release\*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'Nuget'
        allowPackageConflicts: true